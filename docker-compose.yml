version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - ./certbot-webroot:/var/www/certbot
    depends_on:
      - api

  #ssl 인증서 발급을 위한 추가 코드
  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    volumes:
      - ./app:/app
      - ./app/logs:/logs
      - ./app/uploads:/uploads
    environment:
      - RUNNING_IN_DOCKER=true

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    ports:
      - "8510:8510"
    volumes:
      - ./app:/app
      - ./app/logs:/logs
    environment:
      - RUNNING_IN_DOCKER=true
    depends_on:
      - api


# services:
#   api:
#     build:
#       context: .
#       dockerfile: Dockerfile.api
#     ports:
#       - "5041:5041"
#     volumes:
#       - ./app:/app
#       - ./app/logs:/logs
#       - ./app/uploads:/uploads
#     environment:
#       - RUNNING_IN_DOCKER=true

#   streamlit:
#     build:
#       context: .
#       dockerfile: Dockerfile.streamlit
#     ports:
#       - "8511:8511"
#     volumes:
#       - ./app:/app
#       - ./app/logs:/logs
#     environment:
#       - RUNNING_IN_DOCKER=true
#     depends_on:
#       - api